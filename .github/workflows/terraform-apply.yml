name: 'cd_terraform_apply'

on:
  issue_comment:
    types: [created]

jobs:
  apply:
    if: |
      github.event.issue.pull_request &&
      github.event.comment.body == '/terraform apply' &&
      (github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'COLLABORATOR')
    runs-on: ubuntu-latest
    permissions:
      id-token: 'write'
      contents: 'write'
      pull-requests: 'write'
    steps:
      - name: 'Get branch name'
        id: get_branch
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            return pr.data.head.ref;

      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.get_branch.outputs.result }}
          fetch-depth: 0

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_CD }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_CD }}

      - name: 'Download Terraform Plan'
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ github.event.issue.number }}
          path: ./google_cloud_infra

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.4

      - name: Cache Terraform providers
        uses: actions/cache@v3
        with:
          path: gcp_poc_oss_llm_project/.terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('gcp_poc_oss_llm_project/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./google_cloud_infra
        continue-on-error: true

      - name: 'Terraform Apply'
        id: apply
        if: steps.init.outcome == 'success'
        run: terraform apply -auto-approve -no-color tfplan
        working-directory: ./google_cloud_infra
        continue-on-error: true

      - name: 'Comment on PR'
        uses: actions/github-script@v7
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { init, apply } = ${{ toJson(steps) }};
            let body;

            if (init.outcome === 'failure') {
              body = `#### Terraform Init Failed ❌

              Terraform init step failed. Please check the workflow logs for more details.`;
            } else if (apply.outcome === 'failure') {
              body = `#### Terraform Apply Failed ❌

              Terraform apply step failed. Please check the workflow logs for more details.`;
            } else {
              body = `#### Terraform Apply Complete
              **Status:** Success :white_check_mark:`;
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: 'Auto-merge PR'
        if: steps.apply.outcome == 'success'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pull_number = context.issue.number;
            try {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pull_number,
                commit_title: `Auto-merge PR #${pull_number} after successful apply`,
                commit_message: 'Terraform apply was successful, merging automatically.'
              });
            } catch (error) {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pull_number,
                body: `:warning: Failed to auto-merge PR. Please merge manually. Error: ${error.message}`
              });
            }
