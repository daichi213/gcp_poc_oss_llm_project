name: 'cd_terraform_apply'

on:
  issue_comment:
    types: [created]

jobs:
  apply:
    if: |
      github.event.issue.pull_request &&
      github.event.comment.body == '/terraform apply' &&
      (github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'COLLABORATOR')
    runs-on: ubuntu-latest
    permissions:
      id-token: 'write'
      contents: 'write'
      pull-requests: 'write'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.issue.pull_request.head.sha }}
          fetch-depth: 0

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_CD }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_CD }}

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v3

      - name: 'Terraform Init'
        id: init
        run: terraform init
        working-directory: ./google_cloud_infra

      - name: 'Terraform Apply'
        id: apply
        run: terraform apply -auto-approve
        working-directory: ./google_cloud_infra

      - name: 'Comment on PR'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Apply Complete\n**Status:** Success :white_check_mark:`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: 'Auto-merge PR'
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pull_number = context.issue.number;
            try {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pull_number,
                commit_title: `Auto-merge PR #${pull_number} after successful apply`,
                commit_message: 'Terraform apply was successful, merging automatically.'
              });
            } catch (error) {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pull_number,
                body: `:warning: Failed to auto-merge PR. Please merge manually. Error: ${error.message}`
              });
            }
