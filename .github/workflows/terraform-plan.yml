name: 'ci_terraform_plan'

on:
  issue_comment:
    types: [created]

jobs:
  plan:
    if: github.event.issue.pull_request && github.event.comment.body == '/terraform plan'
    runs-on: ubuntu-latest
    permissions:
      id-token: 'write' # GCP Workload Identity Federationに必要
      contents: 'read'
      pull-requests: 'write'

    steps:
      - name: 'Get branch name'
        id: get_branch
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            return pr.data.head.ref;

      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.get_branch.outputs.result }}
          fetch-depth: 0

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_CI }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_CI }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.4

      - name: Cache Terraform providers
        uses: actions/cache@v3
        with:
          path: gcp_poc_oss_llm_project/.terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('gcp_poc_oss_llm_project/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./google_cloud_infra
        continue-on-error: true

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ./google_cloud_infra
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./google_cloud_infra
        continue-on-error: true

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan
        working-directory: ./google_cloud_infra
        continue-on-error: true

      - name: Terraform Show
        id: show
        run: |
          PLAN_OUTPUT=$(terraform show -no-color tfplan)
          echo "plan_output<<EOF" >> $GITHUB_OUTPUT
          echo "```terraform
          ${PLAN_OUTPUT}
          ```" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        working-directory: ./google_cloud_infra
        continue-on-error: true

      - name: 'Comment on PR'
        uses: actions/github-script@v7
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { init, plan } = ${{ toJson(steps) }};
            let body;

            if (init.outcome === 'failure') {
              body = `#### Terraform Init Failed ❌

              Terraform init step failed. Please check the workflow logs for more details.`;
            } else if (plan.outcome === 'failure') {
              body = `#### Terraform Plan Failed ❌

              Terraform plan step failed. Please check the workflow logs for more details.`;
            } else {
              body = `#### Terraform Plan Succeeded ✅

              ${{ steps.format.show.plan_output }}`;
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
