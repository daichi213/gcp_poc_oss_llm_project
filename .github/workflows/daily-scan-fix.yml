name: Daily Scan and Fix

on:
  schedule:
    - cron: '0 0 * * *' # 毎日0時(UTC)に実行
  workflow_dispatch: # 手動実行も可能にする

jobs:
  scan-and-fix:
    name: Scan and Fix (${{ matrix.language }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [ 'actions' ]
    permissions:
      contents: read
      packages: write
      pull-requests: write
    container:
      image: ghcr.io/daichi213/gcp_poc_oss_llm_project:codeql-fix-agent
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --user root
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }} # プロジェクトに合わせて言語を指定

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
          output: ../results
      - name: Run AI Agent to Fix Vulnerabilities
        # 'uses: docker://...'の代わりに'run'を使い、コンテナ内のスクリプトを直接実行します。
        # 'entrypoint.sh'の部分は、お使いのコンテナのDockerfileでENTRYPOINTとして
        # 指定されているスクリプト名やコマンドに置き換えてください。
        run: python /app/main.py
        env:
          # 'with'で渡していた引数は'INPUT_'プレフィックス付きの環境変数として渡します。
          # (ハイフン'-'はアンダースコア'_'に変換されます)
          INPUT_SARIF: results/sarif.json # 上記outputのパス修正に合わせて変更
          INPUT_CODE-DIR: .
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      - name: Create Pull Request
        id: create_pr
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          BRANCH_NAME="ai-fixes/daily-scan-${{ matrix.language }}"
          git checkout -b $BRANCH_NAME
          
          # Add all changes
          git add .
          
          # Commit if there are changes
          if ! git diff --staged --quiet; then
            git commit -m "fix: Auto-fix vulnerabilities by AI Agent for ${{ matrix.language }}"
            git push origin $BRANCH_NAME --force
          
            gh pr create \
              --base main \
              --head $BRANCH_NAME \
              --title "[AI] Automated Vulnerability Fixes for ${{ matrix.language }}" \
              --body "This PR was automatically generated by the AI Agent to fix vulnerabilities detected by CodeQL for ${{ matrix.language }}. Please review the changes carefully before merging." \
              --label "ai-generated"
          else
            echo "No changes to commit."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}